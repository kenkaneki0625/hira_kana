class AudioController{constructor(){this.bgMusic=new Audio("https://docs.google.com/uc?export=open&id=1zho15hWWdkZ4Wt7EjgKFE3gClX5LWhqH"),this.flipSound=new Audio("https://docs.google.com/uc?export=open&id=1weOTktFZj07HoEXoGmZ3P9Z-bNRzjeNj"),this.matchSound=new Audio("https://docs.google.com/uc?export=open&id=108koo0UoE1FKJj-FHmx6LmyBnjA0-8w8"),this.victorySound=new Audio("https://docs.google.com/uc?export=open&id=1iz2s9qFW1croSnxvnXIYeoxGz47m6Y6n"),this.gameOverSound=new Audio("https://docs.google.com/uc?export=open&id=10H0_nF6jwXMse-MNuC2clmHsIue7i8qa"),this.bgMusic.volume=.5,this.bgMusic.loop=!0}startMusic(){this.bgMusic.play()}stopMusic(){this.bgMusic.pause(),this.bgMusic.currentTime=0}flip(){this.flipSound.play()}match(){this.matchSound.play()}victory(){this.stopMusic(),this.victorySound.play()}gameOver(){this.stopMusic(),this.gameOverSound.play()}}class MixOrMatch{constructor(t,e){this.cardsArray=e,this.totalTime=t,this.cardToCheck=null,this.matchedCards=[],this.timeRemaining=t,this.timer=document.getElementById("time-remaining"),this.ticker=document.getElementById("card-clicks"),this.audioController=new AudioController}startGame(){this.totalClicks=0,this.timeRemaining=this.totalTime,this.cardToCheck=null,this.matchedCards=[],this.busy=!0,setTimeout((()=>{this.audioController.startMusic(),this.shuffleCards(this.cardsArray),this.countdown=this.startCountdown(),this.busy=!1}),500),this.hideCards(),this.timer.innerText=this.timeRemaining,this.ticker.innerText=this.totalClicks}shuffleCards(t){for(let e=t.length-1;e>0;e--){let i=Math.floor(Math.random()*(e+1));t[i].style.order=e,t[e].style.order=i}}flipCard(t){this.canFlipCard(t)&&(t.classList.add("click"),this.audioController.flip(),this.totalClicks++,this.ticker.innerText=this.totalClicks,this.cardToCheck?this.checkForCardMatch(t):this.cardToCheck=t)}checkForCardMatch(t){this.getCardType(t)===this.getCardType(this.cardToCheck)?this.cardMatch(t,this.cardToCheck):this.cardMismatch(t,this.cardToCheck),this.cardToCheck=null}cardMatch(t,e){this.matchedCards.push(t),this.matchedCards.push(e),t.classList.remove("click"),e.classList.remove("click"),t.classList.add("matched"),e.classList.add("matched"),this.audioController.match(),this.matchedCards.length===this.cardsArray.length&&this.victory()}cardMismatch(t,e){t.classList.remove("click"),e.classList.remove("click")}getCardType(t){return t.getElementsByClassName("card-value")[0].id}canFlipCard(t){return!this.matchedCards.includes(t)&&t!==this.cardToCheck}hideCards(){this.cardsArray.forEach((t=>{t.classList.remove("matched"),t.classList.remove("click")}))}startCountdown(){return setInterval((()=>{this.timeRemaining--,this.timer.innerText=this.timeRemaining,0===this.timeRemaining&&this.gameOver()}),1e3)}gameOver(){clearInterval(this.countdown),this.audioController.gameOver(),document.getElementById("end-overlay").classList.add("visible")}victory(){clearInterval(this.countdown),this.audioController.victory(),document.getElementById("victory-overlay").classList.add("visible")}}function ready(){let t=Array.from(document.getElementsByClassName("overlay ")),e=Array.from(document.getElementsByClassName("card")),i=new MixOrMatch(200,e);t.forEach((t=>{t.addEventListener("click",(()=>{t.classList.remove("visible"),i.startGame()}))})),e.forEach((t=>{t.addEventListener("click",(()=>{i.flipCard(t)}))}))}"loading"==document.readyState?document.addEventListener("DOMContentLoaded",ready):ready();